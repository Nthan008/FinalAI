import React, { useState } from 'react';
import axios from 'axios';
import './App.css';

function App() {
  const [apkFile, setApkFile] = useState(null);
  const [message, setMessage] = useState('');
  const [loading, setLoading] = useState(false);
  const [predictions, setPredictions] = useState([]); // State to hold predictions

  // Handle file selection
  const handleFileChange = (event) => {
    setApkFile(event.target.files[0]);
    setMessage('');
    setPredictions([]); // Clear predictions on file change
  };

  // Upload the APK file and get predictions
  const uploadAPK = async () => {
    if (!apkFile) {
      setMessage('Please select an APK file first.');
      return;
    }

    setLoading(true);
    setMessage('');
    setPredictions([]);

    const formData = new FormData();
    formData.append('apk', apkFile);

    try {
      const response = await axios.post('http://localhost:5000/upload-apk', formData, {
        headers: { 'Content-Type': 'multipart/form-data' },
      });

      if (response.data.predictions) {
        setMessage(response.data.message || 'APK processed successfully.');
        setPredictions(response.data.predictions); // Store predictions in state
      } else {
        setMessage('Prediction completed, but no predictions returned.');
      }
    } catch (error) {
      console.error('Error uploading APK:', error);
      setMessage('Error processing the APK file. Please try again.');
    }

    setLoading(false);
  };

  return (
    <div className="app-container">
      {/* Navigation Bar */}
      <header className="navbar">
        <div className="logo">AI Malware Detection</div>
        <nav>
          <a href="#home" className="active">Home</a>
          <a href="#about">About</a>
        </nav>
        <div className="profile">
          <img src="https://via.placeholder.com/40" alt="Profile" className="profile-img" />
        </div>
      </header>

      {/* Hero Section */}
      <section className="hero">
        <h1>Android Malware Detection System</h1>
        <p>Upload an APK file to analyze it for malicious activity.</p>

        {/* File Upload */}
        <div className="file-upload">
          <label htmlFor="apk-upload" className="browse-btn">
            Browse APK
          </label>
          <input
            type="file"
            id="apk-upload"
            accept=".apk"
            onChange={handleFileChange}
          />
          <span>{apkFile ? apkFile.name : 'No file selected'}</span>
        </div>

        {/* Upload Button */}
        <button onClick={uploadAPK} className="browse-btn" disabled={loading}>
          {loading ? 'Processing...' : 'Upload & Analyze'}
        </button>

        {/* Status Message */}
        {message && <p className="status-message">{message}</p>}

        {/* Predictions Display */}
        {predictions.length > 0 && (
          <div className="predictions-container">
            <h2>Predictions</h2>
            <ul>
              {predictions.map((prediction, index) => (
                <li key={index}>Row {index + 1}: <strong>{prediction}</strong></li>
              ))}
            </ul>
          </div>
        )}
      </section>
    </div>
  );
}

export default App;
